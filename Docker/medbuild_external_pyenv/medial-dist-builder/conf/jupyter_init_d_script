#!/bin/bash
# /etc/init.d/jupyter
#
# chkconfig: 2345 90 10
# description: Activates/Deactivates jupyter notebook



name=`basename $0`
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

bash -c 'source /opt/medial/python36/enable && mkdir -p $JUPYTER_RUNTIME_DIR'

cmd='source /opt/medial/python36/enable ; cd /nas1/Work/Shared/notebooks ; /opt/medial/python36/usr/bin/jupyter notebook & echo $! > '$pid_file
user="root"

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        if [ -z "$user" ]; then
            sudo bash -c "$cmd" >> "$stdout_log" 2>> "$stderr_log"
        else
            sudo -i -u "$user" bash -c "$cmd" >> "$stdout_log" 2>> "$stderr_log"
        fi
        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        kill `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0

