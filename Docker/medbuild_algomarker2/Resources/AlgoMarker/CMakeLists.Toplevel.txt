project(AlgoMarker)
cmake_minimum_required(VERSION 2.8)

set(EXECUTABLE_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/Linux/${CMAKE_BUILD_TYPE}")

#set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -DGIT_HEAD_VERSION='\"'$(GIT_HEAD_VERSION)'\"' -Wall -Wno-unused-function -Wno-unknown-pragmas -Wno-comment -Wno-sign-compare -Wno-reorder -Wunused-variable -Wformat -Wparentheses -Wmissing-braces -Wreturn-type -Werror=return-type --std=c++11 -Wno-write-strings -Wuninitialized -fopenmp -msse2 -msse3 -msse4 -march=x86-64 --param inline-unit-growth=1000000 -Ofast -g")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DGIT_HEAD_VERSION='\"'$(GIT_HEAD_VERSION)'\"' -Wall -Wno-unused-function -Wno-unknown-pragmas -Wno-comment -Wno-sign-compare -Wno-reorder -Wunused-variable -Wformat -Wparentheses -Wmissing-braces -Wreturn-type -Werror=return-type --std=c++11 -Wno-write-strings -Wuninitialized -Wreturn-type -fopenmp -msse2 -msse3 -msse4 -march=x86-64 --param inline-unit-growth=1000000 -Ofast -pg")
set(CMAKE_CXX_FLAGS   "${CMAKE_CXX_FLAGS} -DGIT_HEAD_VERSION='\"'$(GIT_HEAD_VERSION)'\"' -Wall -Wno-unused-function -Wno-unknown-pragmas -Wno-comment -Wno-sign-compare -Wno-reorder -Wunused-variable -Wformat -Wparentheses -Wmissing-braces -Wreturn-type -Werror=return-type --std=c++11 -Wno-write-strings -Wuninitialized -Wreturn-type -fopenmp -msse2 -msse3 -msse4 -march=x86-64 --param inline-unit-growth=1000000 -Ofast -fomit-frame-pointer -fPIC -DHAVE_WORKING_ISFINITE")

include("$ENV{MR_ROOT}/Projects/Resources/CMakeUtils/CMakeDropNDEBUG.txt")

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -march=x86-64 -Og")

include_directories($ENV{MR_ROOT}/Libs)
include_directories($ENV{MR_ROOT}/Libs/External)
include_directories($ENV{MR_ROOT}/Libs/Internal)
include_directories($ENV{MR_ROOT}/Libs/InternalOrig)
include_directories($ENV{R_INCL_DIR})
include_directories($ENV{LIBXL_INCL_DIR})
include_directories(${PROJECT_SOURCE_DIR})
include_directories($ENV{MR_ROOT}/Libs/External/xgboost/src)
include_directories($ENV{MR_ROOT}/Libs/External/xgboost/include)
include_directories($ENV{MR_ROOT}/Libs/External/xgboost/rabit/include)
include_directories($ENV{MR_ROOT}/Libs/External/xgboost/dmlc-core/include)
include_directories($ENV{MR_ROOT}/Libs/External/LightGBM_2.2.3/LightGBM-2.2.3/include)

add_subdirectory(AMApiTester)
add_subdirectory(AlgoMarker)
add_subdirectory(CommonTestingTools)
add_subdirectory(DynAMWrapper)
#add_subdirectory(InternalAPITester)
#add_subdirectory(SignalsSumAM)
add_subdirectory(/build/MR/Libs/Internal/InfraMed/InfraMed InfraMed)
add_subdirectory(/build/MR/Libs/Internal/Logger/Logger Logger)
add_subdirectory(/build/MR/Libs/External/Mars/Mars Mars)
add_subdirectory(/build/MR/Libs/Internal/MedAlgo/MedAlgo MedAlgo)
add_subdirectory(/build/MR/Libs/Internal/MedEmbed/MedEmbed MedEmbed)
add_subdirectory(/build/MR/Libs/Internal/MedIO/MedIO MedIO)
add_subdirectory(/build/MR/Libs/Internal/MedMat/MedMat MedMat)
add_subdirectory(/build/MR/Libs/Internal/MedProcessTools/MedProcessTools MedProcessTools)
add_subdirectory(/build/MR/Libs/Internal/MedSparseMat/MedSparseMat MedSparseMat)
add_subdirectory(/build/MR/Libs/Internal/MedSplit/MedSplit MedSplit)
add_subdirectory(/build/MR/Libs/Internal/MedStat/MedStat MedStat)
add_subdirectory(/build/MR/Libs/Internal/MedTime/MedTime MedTime)
add_subdirectory(/build/MR/Libs/Internal/MedUtils/MedUtils MedUtils)
add_subdirectory(/build/MR/Libs/Internal/QRF/QRF QRF)
add_subdirectory(/build/MR/Libs/Internal/SerializableObject/SerializableObject SerializableObject)
add_subdirectory(/build/MR/Libs/Internal/TQRF/TQRF TQRF)
add_subdirectory(/build/MR/Libs/External/gbm/gbm gbm)
add_subdirectory(/build/MR/Libs/Internal/micNet/micNet micNet)


#include("$ENV{MR_ROOT}/Projects/Resources/CMakeUtils/CMakePrintProperties.txt")
